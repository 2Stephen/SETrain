<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whut.backend.mapper.QuestionMapper">
    <!--    新增题目-->
    <insert id="insertQuestion" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO question(title, content, tags, answer)
        VALUES (#{title}, #{content}, #{tags}, #{answer})
    </insert>
    <!--    修改题目-->
    <update id="updateQuestion">
        UPDATE question
        SET title   = #{title},
            content = #{content},
            tags    = #{tags},
            answer  = #{answer}
        WHERE id = #{id}
    </update>
    <!--    删除题目-->
    <delete id="deleteQuestionById">
        DELETE
        FROM question
        WHERE id = #{id}
    </delete>
    <!--通过index从question_bank_question找到questionid，在question表找到对应题目-->
    <select id="getQuestionList" resultType="com.whut.backend.entity.Question">
        SELECT question.id,
               question.title,
               question.tags
        FROM question
                 JOIN question_bank_question
                      ON question.id = question_bank_question.questionId
        WHERE question_bank_question.questionBankId = #{index}
    </select>
    <!--    获取题库列表-->
    <select id="getBankList" resultType="com.whut.backend.entity.Bank">
        SELECT id, title
        FROM question_bank
    </select>

    <!--    获取当前题目-->
    <select id="selectById" resultType="com.whut.backend.entity.Question" statementType="CALLABLE">
        {CALL get_question_by_id(#{id, mode=IN})}
    </select>
    <!--    根据当前题目id获取所有当前题库题目的title-->
    <select id="getTitles" resultType="com.whut.backend.entity.QuestionIndex">
        SELECT q.*
        FROM question q
                 JOIN question_bank_question qbq ON q.id = qbq.questionId
        WHERE qbq.questionBankId = (SELECT questionBankId
                                    FROM question_bank_question
                                    WHERE questionId = #{questionid})
    </select>
    <!--    搜索当前题库的题目信息-->
    <select id="searchContents" resultType="com.whut.backend.entity.Question">
        SELECT q.id, q.title, q.tags
        FROM question q
                 JOIN question_bank_question qbq ON q.id = qbq.questionId
        WHERE qbq.questionBankId = (SELECT questionBankId
                                    FROM question_bank_question
                                    WHERE questionId = #{questionid})
          AND LOWER(q.title) LIKE LOWER(CONCAT('%', #{content}, '%'))
    </select>
    <select id="searchAllContents" resultType="com.whut.backend.entity.QuestionBankView">
        SELECT id, question_title, tags, question_bank_title
        FROM question_bank_view
        WHERE LOWER(question_title) LIKE LOWER(CONCAT('%', #{content}, '%'))
           OR LOWER(tags) LIKE LOWER(CONCAT('%', #{content}, '%'))
           OR LOWER(question_bank_title) LIKE LOWER(CONCAT('%', #{content}, '%'))
           OR LOWER(content) LIKE LOWER(CONCAT('%', #{content}, '%'))
           OR LOWER(answer) LIKE LOWER(CONCAT('%', #{content}, '%'))
    </select>
    <select id="findBySearch" resultType="com.whut.backend.entity.Question">
        select * from question
        left join question_bank_question qbq on question.id = qbq.questionId
        <where>
            <if test="params.title != null and params.title != ''">
                and LOWER(title) like LOWER(CONCAT('%',#{params.title},'%'))
            </if>
            <if test="params.questionBankId != null and params.questionBankId != ''">
                and qbq.questionBankId = #{params.questionBankId}
            </if>
        </where>
    </select>


    <select id="generateQuestionCSV" statementType="CALLABLE" flushCache="true">
        {CALL ExportQuestionsToCSV()}
    </select>


    <!--    存储过程拆解-->

    <!-- 删除临时表 -->
    <update id="dropTempTable">
        DROP TEMPORARY TABLE IF EXISTS temp_question;
    </update>

    <!-- 创建临时表 -->
    <update id="createTempTable">
        CREATE TEMPORARY TABLE IF NOT EXISTS temp_question
        (
            id             BIGINT,
            title          VARCHAR(256),
            content        TEXT,
            tags           VARCHAR(1024),
            answer         TEXT,
            questionBankId BIGINT
        );
    </update>

    <!-- 从CSV文件加载数据到临时表 -->
    <update id="loadDataFromFile">
        LOAD DATA INFILE #{fileRealName}
            INTO TABLE temp_question
            FIELDS TERMINATED BY '~' OPTIONALLY ENCLOSED BY '!' ESCAPED BY '$' LINES TERMINATED BY '&amp;';
    </update>

    <!-- 将数据从临时表导入到question表 -->
    <update id="insertIntoQuestion">
        INSERT INTO question (id, title, content, tags, answer)
        SELECT id, title, content, tags, answer
        FROM temp_question
        ON DUPLICATE KEY UPDATE title   = VALUES(title),
                                content = VALUES(content),
                                tags    = VALUES(tags),
                                answer  = VALUES(answer);
    </update>

    <!-- 将数据从临时表导入到question_bank_question表 -->
    <update id="insertIntoQuestionBankQuestion">
        INSERT INTO question_bank_question (questionBankId, questionId)
        SELECT DISTINCT questionBankId, id
        FROM temp_question
        ON DUPLICATE KEY UPDATE questionBankId = VALUES(questionBankId);
    </update>

    <!-- 删除临时表 -->
    <update id="dropTempTableAfterUse">
        DROP TEMPORARY TABLE IF EXISTS temp_question;
    </update>


</mapper>